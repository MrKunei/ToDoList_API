version: "3.8"

services:
  postgres:
    image: postgres:14.6-alpine
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    healthcheck:
      test: pg_isready -U admin
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    image: mrkunei/todolist-django-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "python manage.py migrate"

  api:
    image: mrkunei/todolist-django-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    volumes:
      - ./:/app
    env_file:
      - ./.env
    command: sh -c "python manage.py runserver"
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  front:
    image: sermalenk/skypro-front:base
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - api


volumes:
  postgres:
  api:
